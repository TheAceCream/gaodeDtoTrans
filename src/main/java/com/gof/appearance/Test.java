package com.gof.appearance;

/**
 * 外观模式 测试
 *
 * 外观模式  为子系统中的一组接口提供一个一致的界面，此模式定义了一个高层接口，这个借口使得这一子系统更加容易使用
 *
 * 何时使用最好 首先，在设计初期阶段，应该有意识的将不同的两个层分离
 * 层与层之间建立弯管Facade
 * 其次，在开发阶段，子系统往往因为不断重构烟花而变得越来越复杂
 * 此时可以增加弯管Facade可以提供一个简单的接口，较少他们之间的依赖。
 * 第三，在维护一个一流的大型系统时，可能这个系统已经非常难以维护和扩展了。但因为它包含非常重要的功能，新的需求开发必须要依赖它。
 * 此时用外观模式Facade也是非常合适的。
 * 你可以为新系统开发一个外观Facade类，来提供涉及粗糙或者高度复杂的一流代码的比较清晰简单的家口，
 * 让新系统与Facade对象交互，Facade遗留流代码交互所有复杂的工作。
 */
public class Test {
    public static void main(String[] args) {
        Facade facad = new Facade();
        facad.methodA();


        facad.methodB();
    }
}
